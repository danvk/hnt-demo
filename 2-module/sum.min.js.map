{"version":3,"sources":["../../../../../usr/local/lib/node_modules/browserify/node_modules/browser-pack/_prelude.js","add-nums.js","main.js","node_modules/underscore/underscore.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length",1,"module","addNums","nums","_","reduce","b","handleClick","txt","document","getElementById","value","split","map","v","parseInt","count","alert","querySelector","addEventListener","createReduce","dir","iterator","obj","iteratee","memo","keys","index","currentKey","context","optimizeCb","isArrayLike","arguments","createPredicateIndexFinder","array","predicate","cb","getLength","createIndexFinder","predicateFind","sortedIndex","item","idx","Math","max","min","slice","isNaN","collectNonEnumProps","nonEnumIdx","nonEnumerableProps","constructor","proto","isFunction","prototype","ObjProto","prop","has","contains","push","root","this","previousUnderscore","ArrayProto","Array","Object","FuncProto","Function","toString","hasOwnProperty","nativeIsArray","isArray","nativeKeys","nativeBind","bind","nativeCreate","create","Ctor","_wrapped","VERSION","func","argCount","other","collection","accumulator","apply","identity","isObject","matcher","property","Infinity","createAssigner","keysFunc","undefinedOnly","source","key","baseCreate","result","MAX_ARRAY_INDEX","pow","each","forEach","collect","results","foldl","inject","reduceRight","foldr","find","detect","findIndex","findKey","filter","select","list","reject","negate","every","all","some","any","includes","include","fromIndex","guard","values","indexOf","invoke","method","args","isFunc","pluck","where","attrs","findWhere","computed","lastComputed","shuffle","rand","set","shuffled","random","sample","sortBy","criteria","sort","left","right","group","behavior","groupBy","indexBy","countBy","toArray","size","partition","pass","fail","first","head","take","initial","last","rest","tail","drop","compact","flatten","input","shallow","strict","startIndex","output","isArguments","j","len","without","difference","uniq","unique","isSorted","isBoolean","seen","union","intersection","argsLength","zip","unzip","object","findLastIndex","low","high","mid","floor","lastIndexOf","range","start","stop","step","ceil","executeBound","sourceFunc","boundFunc","callingContext","self","TypeError","bound","concat","partial","boundArgs","position","bindAll","memoize","hasher","cache","address","delay","wait","setTimeout","defer","throttle","options","timeout","previous","later","leading","now","remaining","clearTimeout","trailing","debounce","immediate","timestamp","callNow","wrap","wrapper","compose","after","times","before","once","hasEnumBug","propertyIsEnumerable","allKeys","mapObject","pairs","invert","functions","methods","names","extend","extendOwn","assign","pick","oiteratee","omit","String","defaults","props","clone","tap","interceptor","isMatch","eq","aStack","bStack","className","areArrays","aCtor","bCtor","pop","isEqual","isEmpty","isString","isElement","nodeType","type","name","Int8Array","isFinite","parseFloat","isNumber","isNull","isUndefined","noConflict","constant","noop","propertyOf","matches","accum","Date","getTime","escapeMap","&","<",">","\"","'","`","unescapeMap","createEscaper","escaper","match","join","testRegexp","RegExp","replaceRegexp","string","test","replace","escape","unescape","fallback","idCounter","uniqueId","prefix","id","templateSettings","evaluate","interpolate","noMatch","escapes","\\","\r","\n"," "," ","escapeChar","template","text","settings","oldSettings","offset","variable","render","data","argument","chain","instance","_chain","mixin","valueOf","toJSON","define","amd"],"mappings":"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":"generated.js","sourceRoot":"","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","var _ = require('underscore');\n\n// Add an array of numbers, returning the result.\nfunction addNums(nums) {\n  return _.reduce(nums, function(a, b) { return a + b });\n}\n\nmodule.exports = addNums;\n","var addNums = require('./add-nums');\n\n// Handle a click on the big button.\nfunction handleClick() {\n  var txt = document.getElementById('numbers').value;\n  var nums = txt.split(',').map(function(v) {\n    return parseInt(v);\n  });\n  var count = addNums(nums);\n  alert('They add to ' + count);\n}\n\n// Attach the event handler.\ndocument.querySelector('button')\n        .addEventListener('click', handleClick);\n","//     Underscore.js 1.8.3\n//     http://underscorejs.org\n//     (c) 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n//     Underscore may be freely distributed under the MIT license.\n\n(function() {\n\n  // Baseline setup\n  // --------------\n\n  // Establish the root object, `window` in the browser, or `exports` on the server.\n  var root = this;\n\n  // Save the previous value of the `_` variable.\n  var previousUnderscore = root._;\n\n  // Save bytes in the minified (but not gzipped) version:\n  var ArrayProto = Array.prototype, ObjProto = Object.prototype, FuncProto = Function.prototype;\n\n  // Create quick reference variables for speed access to core prototypes.\n  var\n    push             = ArrayProto.push,\n    slice            = ArrayProto.slice,\n    toString         = ObjProto.toString,\n    hasOwnProperty   = ObjProto.hasOwnProperty;\n\n  // All **ECMAScript 5** native function implementations that we hope to use\n  // are declared here.\n  var\n    nativeIsArray      = Array.isArray,\n    nativeKeys         = Object.keys,\n    nativeBind         = FuncProto.bind,\n    nativeCreate       = Object.create;\n\n  // Naked function reference for surrogate-prototype-swapping.\n  var Ctor = function(){};\n\n  // Create a safe reference to the Underscore object for use below.\n  var _ = function(obj) {\n    if (obj instanceof _) return obj;\n    if (!(this instanceof _)) return new _(obj);\n    this._wrapped = obj;\n  };\n\n  // Export the Underscore object for **Node.js**, with\n  // backwards-compatibility for the old `require()` API. If we're in\n  // the browser, add `_` as a global object.\n  if (typeof exports !== 'undefined') {\n    if (typeof module !== 'undefined' && module.exports) {\n      exports = module.exports = _;\n    }\n    exports._ = _;\n  } else {\n    root._ = _;\n  }\n\n  // Current version.\n  _.VERSION = '1.8.3';\n\n  // Internal function that returns an efficient (for current engines) version\n  // of the passed-in callback, to be repeatedly applied in other Underscore\n  // functions.\n  var optimizeCb = function(func, context, argCount) {\n    if (context === void 0) return func;\n    switch (argCount == null ? 3 : argCount) {\n      case 1: return function(value) {\n        return func.call(context, value);\n      };\n      case 2: return function(value, other) {\n        return func.call(context, value, other);\n      };\n      case 3: return function(value, index, collection) {\n        return func.call(context, value, index, collection);\n      };\n      case 4: return function(accumulator, value, index, collection) {\n        return func.call(context, accumulator, value, index, collection);\n      };\n    }\n    return function() {\n      return func.apply(context, arguments);\n    };\n  };\n\n  // A mostly-internal function to generate callbacks that can be applied\n  // to each element in a collection, returning the desired result — either\n  // identity, an arbitrary callback, a property matcher, or a property accessor.\n  var cb = function(value, context, argCount) {\n    if (value == null) return _.identity;\n    if (_.isFunction(value)) return optimizeCb(value, context, argCount);\n    if (_.isObject(value)) return _.matcher(value);\n    return _.property(value);\n  };\n  _.iteratee = function(value, context) {\n    return cb(value, context, Infinity);\n  };\n\n  // An internal function for creating assigner functions.\n  var createAssigner = function(keysFunc, undefinedOnly) {\n    return function(obj) {\n      var length = arguments.length;\n      if (length < 2 || obj == null) return obj;\n      for (var index = 1; index < length; index++) {\n        var source = arguments[index],\n            keys = keysFunc(source),\n            l = keys.length;\n        for (var i = 0; i < l; i++) {\n          var key = keys[i];\n          if (!undefinedOnly || obj[key] === void 0) obj[key] = source[key];\n        }\n      }\n      return obj;\n    };\n  };\n\n  // An internal function for creating a new object that inherits from another.\n  var baseCreate = function(prototype) {\n    if (!_.isObject(prototype)) return {};\n    if (nativeCreate) return nativeCreate(prototype);\n    Ctor.prototype = prototype;\n    var result = new Ctor;\n    Ctor.prototype = null;\n    return result;\n  };\n\n  var property = function(key) {\n    return function(obj) {\n      return obj == null ? void 0 : obj[key];\n    };\n  };\n\n  // Helper for collection methods to determine whether a collection\n  // should be iterated as an array or as an object\n  // Related: http://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength\n  // Avoids a very nasty iOS 8 JIT bug on ARM-64. #2094\n  var MAX_ARRAY_INDEX = Math.pow(2, 53) - 1;\n  var getLength = property('length');\n  var isArrayLike = function(collection) {\n    var length = getLength(collection);\n    return typeof length == 'number' && length >= 0 && length <= MAX_ARRAY_INDEX;\n  };\n\n  // Collection Functions\n  // --------------------\n\n  // The cornerstone, an `each` implementation, aka `forEach`.\n  // Handles raw objects in addition to array-likes. Treats all\n  // sparse array-likes as if they were dense.\n  _.each = _.forEach = function(obj, iteratee, context) {\n    iteratee = optimizeCb(iteratee, context);\n    var i, length;\n    if (isArrayLike(obj)) {\n      for (i = 0, length = obj.length; i < length; i++) {\n        iteratee(obj[i], i, obj);\n      }\n    } else {\n      var keys = _.keys(obj);\n      for (i = 0, length = keys.length; i < length; i++) {\n        iteratee(obj[keys[i]], keys[i], obj);\n      }\n    }\n    return obj;\n  };\n\n  // Return the results of applying the iteratee to each element.\n  _.map = _.collect = function(obj, iteratee, context) {\n    iteratee = cb(iteratee, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length,\n        results = Array(length);\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      results[index] = iteratee(obj[currentKey], currentKey, obj);\n    }\n    return results;\n  };\n\n  // Create a reducing function iterating left or right.\n  function createReduce(dir) {\n    // Optimized iterator function as using arguments.length\n    // in the main function will deoptimize the, see #1991.\n    function iterator(obj, iteratee, memo, keys, index, length) {\n      for (; index >= 0 && index < length; index += dir) {\n        var currentKey = keys ? keys[index] : index;\n        memo = iteratee(memo, obj[currentKey], currentKey, obj);\n      }\n      return memo;\n    }\n\n    return function(obj, iteratee, memo, context) {\n      iteratee = optimizeCb(iteratee, context, 4);\n      var keys = !isArrayLike(obj) && _.keys(obj),\n          length = (keys || obj).length,\n          index = dir > 0 ? 0 : length - 1;\n      // Determine the initial value if none is provided.\n      if (arguments.length < 3) {\n        memo = obj[keys ? keys[index] : index];\n        index += dir;\n      }\n      return iterator(obj, iteratee, memo, keys, index, length);\n    };\n  }\n\n  // **Reduce** builds up a single result from a list of values, aka `inject`,\n  // or `foldl`.\n  _.reduce = _.foldl = _.inject = createReduce(1);\n\n  // The right-associative version of reduce, also known as `foldr`.\n  _.reduceRight = _.foldr = createReduce(-1);\n\n  // Return the first value which passes a truth test. Aliased as `detect`.\n  _.find = _.detect = function(obj, predicate, context) {\n    var key;\n    if (isArrayLike(obj)) {\n      key = _.findIndex(obj, predicate, context);\n    } else {\n      key = _.findKey(obj, predicate, context);\n    }\n    if (key !== void 0 && key !== -1) return obj[key];\n  };\n\n  // Return all the elements that pass a truth test.\n  // Aliased as `select`.\n  _.filter = _.select = function(obj, predicate, context) {\n    var results = [];\n    predicate = cb(predicate, context);\n    _.each(obj, function(value, index, list) {\n      if (predicate(value, index, list)) results.push(value);\n    });\n    return results;\n  };\n\n  // Return all the elements for which a truth test fails.\n  _.reject = function(obj, predicate, context) {\n    return _.filter(obj, _.negate(cb(predicate)), context);\n  };\n\n  // Determine whether all of the elements match a truth test.\n  // Aliased as `all`.\n  _.every = _.all = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length;\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      if (!predicate(obj[currentKey], currentKey, obj)) return false;\n    }\n    return true;\n  };\n\n  // Determine if at least one element in the object matches a truth test.\n  // Aliased as `any`.\n  _.some = _.any = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length;\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      if (predicate(obj[currentKey], currentKey, obj)) return true;\n    }\n    return false;\n  };\n\n  // Determine if the array or object contains a given item (using `===`).\n  // Aliased as `includes` and `include`.\n  _.contains = _.includes = _.include = function(obj, item, fromIndex, guard) {\n    if (!isArrayLike(obj)) obj = _.values(obj);\n    if (typeof fromIndex != 'number' || guard) fromIndex = 0;\n    return _.indexOf(obj, item, fromIndex) >= 0;\n  };\n\n  // Invoke a method (with arguments) on every item in a collection.\n  _.invoke = function(obj, method) {\n    var args = slice.call(arguments, 2);\n    var isFunc = _.isFunction(method);\n    return _.map(obj, function(value) {\n      var func = isFunc ? method : value[method];\n      return func == null ? func : func.apply(value, args);\n    });\n  };\n\n  // Convenience version of a common use case of `map`: fetching a property.\n  _.pluck = function(obj, key) {\n    return _.map(obj, _.property(key));\n  };\n\n  // Convenience version of a common use case of `filter`: selecting only objects\n  // containing specific `key:value` pairs.\n  _.where = function(obj, attrs) {\n    return _.filter(obj, _.matcher(attrs));\n  };\n\n  // Convenience version of a common use case of `find`: getting the first object\n  // containing specific `key:value` pairs.\n  _.findWhere = function(obj, attrs) {\n    return _.find(obj, _.matcher(attrs));\n  };\n\n  // Return the maximum element (or element-based computation).\n  _.max = function(obj, iteratee, context) {\n    var result = -Infinity, lastComputed = -Infinity,\n        value, computed;\n    if (iteratee == null && obj != null) {\n      obj = isArrayLike(obj) ? obj : _.values(obj);\n      for (var i = 0, length = obj.length; i < length; i++) {\n        value = obj[i];\n        if (value > result) {\n          result = value;\n        }\n      }\n    } else {\n      iteratee = cb(iteratee, context);\n      _.each(obj, function(value, index, list) {\n        computed = iteratee(value, index, list);\n        if (computed > lastComputed || computed === -Infinity && result === -Infinity) {\n          result = value;\n          lastComputed = computed;\n        }\n      });\n    }\n    return result;\n  };\n\n  // Return the minimum element (or element-based computation).\n  _.min = function(obj, iteratee, context) {\n    var result = Infinity, lastComputed = Infinity,\n        value, computed;\n    if (iteratee == null && obj != null) {\n      obj = isArrayLike(obj) ? obj : _.values(obj);\n      for (var i = 0, length = obj.length; i < length; i++) {\n        value = obj[i];\n        if (value < result) {\n          result = value;\n        }\n      }\n    } else {\n      iteratee = cb(iteratee, context);\n      _.each(obj, function(value, index, list) {\n        computed = iteratee(value, index, list);\n        if (computed < lastComputed || computed === Infinity && result === Infinity) {\n          result = value;\n          lastComputed = computed;\n        }\n      });\n    }\n    return result;\n  };\n\n  // Shuffle a collection, using the modern version of the\n  // [Fisher-Yates shuffle](http://en.wikipedia.org/wiki/Fisher–Yates_shuffle).\n  _.shuffle = function(obj) {\n    var set = isArrayLike(obj) ? obj : _.values(obj);\n    var length = set.length;\n    var shuffled = Array(length);\n    for (var index = 0, rand; index < length; index++) {\n      rand = _.random(0, index);\n      if (rand !== index) shuffled[index] = shuffled[rand];\n      shuffled[rand] = set[index];\n    }\n    return shuffled;\n  };\n\n  // Sample **n** random values from a collection.\n  // If **n** is not specified, returns a single random element.\n  // The internal `guard` argument allows it to work with `map`.\n  _.sample = function(obj, n, guard) {\n    if (n == null || guard) {\n      if (!isArrayLike(obj)) obj = _.values(obj);\n      return obj[_.random(obj.length - 1)];\n    }\n    return _.shuffle(obj).slice(0, Math.max(0, n));\n  };\n\n  // Sort the object's values by a criterion produced by an iteratee.\n  _.sortBy = function(obj, iteratee, context) {\n    iteratee = cb(iteratee, context);\n    return _.pluck(_.map(obj, function(value, index, list) {\n      return {\n        value: value,\n        index: index,\n        criteria: iteratee(value, index, list)\n      };\n    }).sort(function(left, right) {\n      var a = left.criteria;\n      var b = right.criteria;\n      if (a !== b) {\n        if (a > b || a === void 0) return 1;\n        if (a < b || b === void 0) return -1;\n      }\n      return left.index - right.index;\n    }), 'value');\n  };\n\n  // An internal function used for aggregate \"group by\" operations.\n  var group = function(behavior) {\n    return function(obj, iteratee, context) {\n      var result = {};\n      iteratee = cb(iteratee, context);\n      _.each(obj, function(value, index) {\n        var key = iteratee(value, index, obj);\n        behavior(result, value, key);\n      });\n      return result;\n    };\n  };\n\n  // Groups the object's values by a criterion. Pass either a string attribute\n  // to group by, or a function that returns the criterion.\n  _.groupBy = group(function(result, value, key) {\n    if (_.has(result, key)) result[key].push(value); else result[key] = [value];\n  });\n\n  // Indexes the object's values by a criterion, similar to `groupBy`, but for\n  // when you know that your index values will be unique.\n  _.indexBy = group(function(result, value, key) {\n    result[key] = value;\n  });\n\n  // Counts instances of an object that group by a certain criterion. Pass\n  // either a string attribute to count by, or a function that returns the\n  // criterion.\n  _.countBy = group(function(result, value, key) {\n    if (_.has(result, key)) result[key]++; else result[key] = 1;\n  });\n\n  // Safely create a real, live array from anything iterable.\n  _.toArray = function(obj) {\n    if (!obj) return [];\n    if (_.isArray(obj)) return slice.call(obj);\n    if (isArrayLike(obj)) return _.map(obj, _.identity);\n    return _.values(obj);\n  };\n\n  // Return the number of elements in an object.\n  _.size = function(obj) {\n    if (obj == null) return 0;\n    return isArrayLike(obj) ? obj.length : _.keys(obj).length;\n  };\n\n  // Split a collection into two arrays: one whose elements all satisfy the given\n  // predicate, and one whose elements all do not satisfy the predicate.\n  _.partition = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var pass = [], fail = [];\n    _.each(obj, function(value, key, obj) {\n      (predicate(value, key, obj) ? pass : fail).push(value);\n    });\n    return [pass, fail];\n  };\n\n  // Array Functions\n  // ---------------\n\n  // Get the first element of an array. Passing **n** will return the first N\n  // values in the array. Aliased as `head` and `take`. The **guard** check\n  // allows it to work with `_.map`.\n  _.first = _.head = _.take = function(array, n, guard) {\n    if (array == null) return void 0;\n    if (n == null || guard) return array[0];\n    return _.initial(array, array.length - n);\n  };\n\n  // Returns everything but the last entry of the array. Especially useful on\n  // the arguments object. Passing **n** will return all the values in\n  // the array, excluding the last N.\n  _.initial = function(array, n, guard) {\n    return slice.call(array, 0, Math.max(0, array.length - (n == null || guard ? 1 : n)));\n  };\n\n  // Get the last element of an array. Passing **n** will return the last N\n  // values in the array.\n  _.last = function(array, n, guard) {\n    if (array == null) return void 0;\n    if (n == null || guard) return array[array.length - 1];\n    return _.rest(array, Math.max(0, array.length - n));\n  };\n\n  // Returns everything but the first entry of the array. Aliased as `tail` and `drop`.\n  // Especially useful on the arguments object. Passing an **n** will return\n  // the rest N values in the array.\n  _.rest = _.tail = _.drop = function(array, n, guard) {\n    return slice.call(array, n == null || guard ? 1 : n);\n  };\n\n  // Trim out all falsy values from an array.\n  _.compact = function(array) {\n    return _.filter(array, _.identity);\n  };\n\n  // Internal implementation of a recursive `flatten` function.\n  var flatten = function(input, shallow, strict, startIndex) {\n    var output = [], idx = 0;\n    for (var i = startIndex || 0, length = getLength(input); i < length; i++) {\n      var value = input[i];\n      if (isArrayLike(value) && (_.isArray(value) || _.isArguments(value))) {\n        //flatten current level of array or arguments object\n        if (!shallow) value = flatten(value, shallow, strict);\n        var j = 0, len = value.length;\n        output.length += len;\n        while (j < len) {\n          output[idx++] = value[j++];\n        }\n      } else if (!strict) {\n        output[idx++] = value;\n      }\n    }\n    return output;\n  };\n\n  // Flatten out an array, either recursively (by default), or just one level.\n  _.flatten = function(array, shallow) {\n    return flatten(array, shallow, false);\n  };\n\n  // Return a version of the array that does not contain the specified value(s).\n  _.without = function(array) {\n    return _.difference(array, slice.call(arguments, 1));\n  };\n\n  // Produce a duplicate-free version of the array. If the array has already\n  // been sorted, you have the option of using a faster algorithm.\n  // Aliased as `unique`.\n  _.uniq = _.unique = function(array, isSorted, iteratee, context) {\n    if (!_.isBoolean(isSorted)) {\n      context = iteratee;\n      iteratee = isSorted;\n      isSorted = false;\n    }\n    if (iteratee != null) iteratee = cb(iteratee, context);\n    var result = [];\n    var seen = [];\n    for (var i = 0, length = getLength(array); i < length; i++) {\n      var value = array[i],\n          computed = iteratee ? iteratee(value, i, array) : value;\n      if (isSorted) {\n        if (!i || seen !== computed) result.push(value);\n        seen = computed;\n      } else if (iteratee) {\n        if (!_.contains(seen, computed)) {\n          seen.push(computed);\n          result.push(value);\n        }\n      } else if (!_.contains(result, value)) {\n        result.push(value);\n      }\n    }\n    return result;\n  };\n\n  // Produce an array that contains the union: each distinct element from all of\n  // the passed-in arrays.\n  _.union = function() {\n    return _.uniq(flatten(arguments, true, true));\n  };\n\n  // Produce an array that contains every item shared between all the\n  // passed-in arrays.\n  _.intersection = function(array) {\n    var result = [];\n    var argsLength = arguments.length;\n    for (var i = 0, length = getLength(array); i < length; i++) {\n      var item = array[i];\n      if (_.contains(result, item)) continue;\n      for (var j = 1; j < argsLength; j++) {\n        if (!_.contains(arguments[j], item)) break;\n      }\n      if (j === argsLength) result.push(item);\n    }\n    return result;\n  };\n\n  // Take the difference between one array and a number of other arrays.\n  // Only the elements present in just the first array will remain.\n  _.difference = function(array) {\n    var rest = flatten(arguments, true, true, 1);\n    return _.filter(array, function(value){\n      return !_.contains(rest, value);\n    });\n  };\n\n  // Zip together multiple lists into a single array -- elements that share\n  // an index go together.\n  _.zip = function() {\n    return _.unzip(arguments);\n  };\n\n  // Complement of _.zip. Unzip accepts an array of arrays and groups\n  // each array's elements on shared indices\n  _.unzip = function(array) {\n    var length = array && _.max(array, getLength).length || 0;\n    var result = Array(length);\n\n    for (var index = 0; index < length; index++) {\n      result[index] = _.pluck(array, index);\n    }\n    return result;\n  };\n\n  // Converts lists into objects. Pass either a single array of `[key, value]`\n  // pairs, or two parallel arrays of the same length -- one of keys, and one of\n  // the corresponding values.\n  _.object = function(list, values) {\n    var result = {};\n    for (var i = 0, length = getLength(list); i < length; i++) {\n      if (values) {\n        result[list[i]] = values[i];\n      } else {\n        result[list[i][0]] = list[i][1];\n      }\n    }\n    return result;\n  };\n\n  // Generator function to create the findIndex and findLastIndex functions\n  function createPredicateIndexFinder(dir) {\n    return function(array, predicate, context) {\n      predicate = cb(predicate, context);\n      var length = getLength(array);\n      var index = dir > 0 ? 0 : length - 1;\n      for (; index >= 0 && index < length; index += dir) {\n        if (predicate(array[index], index, array)) return index;\n      }\n      return -1;\n    };\n  }\n\n  // Returns the first index on an array-like that passes a predicate test\n  _.findIndex = createPredicateIndexFinder(1);\n  _.findLastIndex = createPredicateIndexFinder(-1);\n\n  // Use a comparator function to figure out the smallest index at which\n  // an object should be inserted so as to maintain order. Uses binary search.\n  _.sortedIndex = function(array, obj, iteratee, context) {\n    iteratee = cb(iteratee, context, 1);\n    var value = iteratee(obj);\n    var low = 0, high = getLength(array);\n    while (low < high) {\n      var mid = Math.floor((low + high) / 2);\n      if (iteratee(array[mid]) < value) low = mid + 1; else high = mid;\n    }\n    return low;\n  };\n\n  // Generator function to create the indexOf and lastIndexOf functions\n  function createIndexFinder(dir, predicateFind, sortedIndex) {\n    return function(array, item, idx) {\n      var i = 0, length = getLength(array);\n      if (typeof idx == 'number') {\n        if (dir > 0) {\n            i = idx >= 0 ? idx : Math.max(idx + length, i);\n        } else {\n            length = idx >= 0 ? Math.min(idx + 1, length) : idx + length + 1;\n        }\n      } else if (sortedIndex && idx && length) {\n        idx = sortedIndex(array, item);\n        return array[idx] === item ? idx : -1;\n      }\n      if (item !== item) {\n        idx = predicateFind(slice.call(array, i, length), _.isNaN);\n        return idx >= 0 ? idx + i : -1;\n      }\n      for (idx = dir > 0 ? i : length - 1; idx >= 0 && idx < length; idx += dir) {\n        if (array[idx] === item) return idx;\n      }\n      return -1;\n    };\n  }\n\n  // Return the position of the first occurrence of an item in an array,\n  // or -1 if the item is not included in the array.\n  // If the array is large and already in sort order, pass `true`\n  // for **isSorted** to use binary search.\n  _.indexOf = createIndexFinder(1, _.findIndex, _.sortedIndex);\n  _.lastIndexOf = createIndexFinder(-1, _.findLastIndex);\n\n  // Generate an integer Array containing an arithmetic progression. A port of\n  // the native Python `range()` function. See\n  // [the Python documentation](http://docs.python.org/library/functions.html#range).\n  _.range = function(start, stop, step) {\n    if (stop == null) {\n      stop = start || 0;\n      start = 0;\n    }\n    step = step || 1;\n\n    var length = Math.max(Math.ceil((stop - start) / step), 0);\n    var range = Array(length);\n\n    for (var idx = 0; idx < length; idx++, start += step) {\n      range[idx] = start;\n    }\n\n    return range;\n  };\n\n  // Function (ahem) Functions\n  // ------------------\n\n  // Determines whether to execute a function as a constructor\n  // or a normal function with the provided arguments\n  var executeBound = function(sourceFunc, boundFunc, context, callingContext, args) {\n    if (!(callingContext instanceof boundFunc)) return sourceFunc.apply(context, args);\n    var self = baseCreate(sourceFunc.prototype);\n    var result = sourceFunc.apply(self, args);\n    if (_.isObject(result)) return result;\n    return self;\n  };\n\n  // Create a function bound to a given object (assigning `this`, and arguments,\n  // optionally). Delegates to **ECMAScript 5**'s native `Function.bind` if\n  // available.\n  _.bind = function(func, context) {\n    if (nativeBind && func.bind === nativeBind) return nativeBind.apply(func, slice.call(arguments, 1));\n    if (!_.isFunction(func)) throw new TypeError('Bind must be called on a function');\n    var args = slice.call(arguments, 2);\n    var bound = function() {\n      return executeBound(func, bound, context, this, args.concat(slice.call(arguments)));\n    };\n    return bound;\n  };\n\n  // Partially apply a function by creating a version that has had some of its\n  // arguments pre-filled, without changing its dynamic `this` context. _ acts\n  // as a placeholder, allowing any combination of arguments to be pre-filled.\n  _.partial = function(func) {\n    var boundArgs = slice.call(arguments, 1);\n    var bound = function() {\n      var position = 0, length = boundArgs.length;\n      var args = Array(length);\n      for (var i = 0; i < length; i++) {\n        args[i] = boundArgs[i] === _ ? arguments[position++] : boundArgs[i];\n      }\n      while (position < arguments.length) args.push(arguments[position++]);\n      return executeBound(func, bound, this, this, args);\n    };\n    return bound;\n  };\n\n  // Bind a number of an object's methods to that object. Remaining arguments\n  // are the method names to be bound. Useful for ensuring that all callbacks\n  // defined on an object belong to it.\n  _.bindAll = function(obj) {\n    var i, length = arguments.length, key;\n    if (length <= 1) throw new Error('bindAll must be passed function names');\n    for (i = 1; i < length; i++) {\n      key = arguments[i];\n      obj[key] = _.bind(obj[key], obj);\n    }\n    return obj;\n  };\n\n  // Memoize an expensive function by storing its results.\n  _.memoize = function(func, hasher) {\n    var memoize = function(key) {\n      var cache = memoize.cache;\n      var address = '' + (hasher ? hasher.apply(this, arguments) : key);\n      if (!_.has(cache, address)) cache[address] = func.apply(this, arguments);\n      return cache[address];\n    };\n    memoize.cache = {};\n    return memoize;\n  };\n\n  // Delays a function for the given number of milliseconds, and then calls\n  // it with the arguments supplied.\n  _.delay = function(func, wait) {\n    var args = slice.call(arguments, 2);\n    return setTimeout(function(){\n      return func.apply(null, args);\n    }, wait);\n  };\n\n  // Defers a function, scheduling it to run after the current call stack has\n  // cleared.\n  _.defer = _.partial(_.delay, _, 1);\n\n  // Returns a function, that, when invoked, will only be triggered at most once\n  // during a given window of time. Normally, the throttled function will run\n  // as much as it can, without ever going more than once per `wait` duration;\n  // but if you'd like to disable the execution on the leading edge, pass\n  // `{leading: false}`. To disable execution on the trailing edge, ditto.\n  _.throttle = function(func, wait, options) {\n    var context, args, result;\n    var timeout = null;\n    var previous = 0;\n    if (!options) options = {};\n    var later = function() {\n      previous = options.leading === false ? 0 : _.now();\n      timeout = null;\n      result = func.apply(context, args);\n      if (!timeout) context = args = null;\n    };\n    return function() {\n      var now = _.now();\n      if (!previous && options.leading === false) previous = now;\n      var remaining = wait - (now - previous);\n      context = this;\n      args = arguments;\n      if (remaining <= 0 || remaining > wait) {\n        if (timeout) {\n          clearTimeout(timeout);\n          timeout = null;\n        }\n        previous = now;\n        result = func.apply(context, args);\n        if (!timeout) context = args = null;\n      } else if (!timeout && options.trailing !== false) {\n        timeout = setTimeout(later, remaining);\n      }\n      return result;\n    };\n  };\n\n  // Returns a function, that, as long as it continues to be invoked, will not\n  // be triggered. The function will be called after it stops being called for\n  // N milliseconds. If `immediate` is passed, trigger the function on the\n  // leading edge, instead of the trailing.\n  _.debounce = function(func, wait, immediate) {\n    var timeout, args, context, timestamp, result;\n\n    var later = function() {\n      var last = _.now() - timestamp;\n\n      if (last < wait && last >= 0) {\n        timeout = setTimeout(later, wait - last);\n      } else {\n        timeout = null;\n        if (!immediate) {\n          result = func.apply(context, args);\n          if (!timeout) context = args = null;\n        }\n      }\n    };\n\n    return function() {\n      context = this;\n      args = arguments;\n      timestamp = _.now();\n      var callNow = immediate && !timeout;\n      if (!timeout) timeout = setTimeout(later, wait);\n      if (callNow) {\n        result = func.apply(context, args);\n        context = args = null;\n      }\n\n      return result;\n    };\n  };\n\n  // Returns the first function passed as an argument to the second,\n  // allowing you to adjust arguments, run code before and after, and\n  // conditionally execute the original function.\n  _.wrap = function(func, wrapper) {\n    return _.partial(wrapper, func);\n  };\n\n  // Returns a negated version of the passed-in predicate.\n  _.negate = function(predicate) {\n    return function() {\n      return !predicate.apply(this, arguments);\n    };\n  };\n\n  // Returns a function that is the composition of a list of functions, each\n  // consuming the return value of the function that follows.\n  _.compose = function() {\n    var args = arguments;\n    var start = args.length - 1;\n    return function() {\n      var i = start;\n      var result = args[start].apply(this, arguments);\n      while (i--) result = args[i].call(this, result);\n      return result;\n    };\n  };\n\n  // Returns a function that will only be executed on and after the Nth call.\n  _.after = function(times, func) {\n    return function() {\n      if (--times < 1) {\n        return func.apply(this, arguments);\n      }\n    };\n  };\n\n  // Returns a function that will only be executed up to (but not including) the Nth call.\n  _.before = function(times, func) {\n    var memo;\n    return function() {\n      if (--times > 0) {\n        memo = func.apply(this, arguments);\n      }\n      if (times <= 1) func = null;\n      return memo;\n    };\n  };\n\n  // Returns a function that will be executed at most one time, no matter how\n  // often you call it. Useful for lazy initialization.\n  _.once = _.partial(_.before, 2);\n\n  // Object Functions\n  // ----------------\n\n  // Keys in IE < 9 that won't be iterated by `for key in ...` and thus missed.\n  var hasEnumBug = !{toString: null}.propertyIsEnumerable('toString');\n  var nonEnumerableProps = ['valueOf', 'isPrototypeOf', 'toString',\n                      'propertyIsEnumerable', 'hasOwnProperty', 'toLocaleString'];\n\n  function collectNonEnumProps(obj, keys) {\n    var nonEnumIdx = nonEnumerableProps.length;\n    var constructor = obj.constructor;\n    var proto = (_.isFunction(constructor) && constructor.prototype) || ObjProto;\n\n    // Constructor is a special case.\n    var prop = 'constructor';\n    if (_.has(obj, prop) && !_.contains(keys, prop)) keys.push(prop);\n\n    while (nonEnumIdx--) {\n      prop = nonEnumerableProps[nonEnumIdx];\n      if (prop in obj && obj[prop] !== proto[prop] && !_.contains(keys, prop)) {\n        keys.push(prop);\n      }\n    }\n  }\n\n  // Retrieve the names of an object's own properties.\n  // Delegates to **ECMAScript 5**'s native `Object.keys`\n  _.keys = function(obj) {\n    if (!_.isObject(obj)) return [];\n    if (nativeKeys) return nativeKeys(obj);\n    var keys = [];\n    for (var key in obj) if (_.has(obj, key)) keys.push(key);\n    // Ahem, IE < 9.\n    if (hasEnumBug) collectNonEnumProps(obj, keys);\n    return keys;\n  };\n\n  // Retrieve all the property names of an object.\n  _.allKeys = function(obj) {\n    if (!_.isObject(obj)) return [];\n    var keys = [];\n    for (var key in obj) keys.push(key);\n    // Ahem, IE < 9.\n    if (hasEnumBug) collectNonEnumProps(obj, keys);\n    return keys;\n  };\n\n  // Retrieve the values of an object's properties.\n  _.values = function(obj) {\n    var keys = _.keys(obj);\n    var length = keys.length;\n    var values = Array(length);\n    for (var i = 0; i < length; i++) {\n      values[i] = obj[keys[i]];\n    }\n    return values;\n  };\n\n  // Returns the results of applying the iteratee to each element of the object\n  // In contrast to _.map it returns an object\n  _.mapObject = function(obj, iteratee, context) {\n    iteratee = cb(iteratee, context);\n    var keys =  _.keys(obj),\n          length = keys.length,\n          results = {},\n          currentKey;\n      for (var index = 0; index < length; index++) {\n        currentKey = keys[index];\n        results[currentKey] = iteratee(obj[currentKey], currentKey, obj);\n      }\n      return results;\n  };\n\n  // Convert an object into a list of `[key, value]` pairs.\n  _.pairs = function(obj) {\n    var keys = _.keys(obj);\n    var length = keys.length;\n    var pairs = Array(length);\n    for (var i = 0; i < length; i++) {\n      pairs[i] = [keys[i], obj[keys[i]]];\n    }\n    return pairs;\n  };\n\n  // Invert the keys and values of an object. The values must be serializable.\n  _.invert = function(obj) {\n    var result = {};\n    var keys = _.keys(obj);\n    for (var i = 0, length = keys.length; i < length; i++) {\n      result[obj[keys[i]]] = keys[i];\n    }\n    return result;\n  };\n\n  // Return a sorted list of the function names available on the object.\n  // Aliased as `methods`\n  _.functions = _.methods = function(obj) {\n    var names = [];\n    for (var key in obj) {\n      if (_.isFunction(obj[key])) names.push(key);\n    }\n    return names.sort();\n  };\n\n  // Extend a given object with all the properties in passed-in object(s).\n  _.extend = createAssigner(_.allKeys);\n\n  // Assigns a given object with all the own properties in the passed-in object(s)\n  // (https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Object/assign)\n  _.extendOwn = _.assign = createAssigner(_.keys);\n\n  // Returns the first key on an object that passes a predicate test\n  _.findKey = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = _.keys(obj), key;\n    for (var i = 0, length = keys.length; i < length; i++) {\n      key = keys[i];\n      if (predicate(obj[key], key, obj)) return key;\n    }\n  };\n\n  // Return a copy of the object only containing the whitelisted properties.\n  _.pick = function(object, oiteratee, context) {\n    var result = {}, obj = object, iteratee, keys;\n    if (obj == null) return result;\n    if (_.isFunction(oiteratee)) {\n      keys = _.allKeys(obj);\n      iteratee = optimizeCb(oiteratee, context);\n    } else {\n      keys = flatten(arguments, false, false, 1);\n      iteratee = function(value, key, obj) { return key in obj; };\n      obj = Object(obj);\n    }\n    for (var i = 0, length = keys.length; i < length; i++) {\n      var key = keys[i];\n      var value = obj[key];\n      if (iteratee(value, key, obj)) result[key] = value;\n    }\n    return result;\n  };\n\n   // Return a copy of the object without the blacklisted properties.\n  _.omit = function(obj, iteratee, context) {\n    if (_.isFunction(iteratee)) {\n      iteratee = _.negate(iteratee);\n    } else {\n      var keys = _.map(flatten(arguments, false, false, 1), String);\n      iteratee = function(value, key) {\n        return !_.contains(keys, key);\n      };\n    }\n    return _.pick(obj, iteratee, context);\n  };\n\n  // Fill in a given object with default properties.\n  _.defaults = createAssigner(_.allKeys, true);\n\n  // Creates an object that inherits from the given prototype object.\n  // If additional properties are provided then they will be added to the\n  // created object.\n  _.create = function(prototype, props) {\n    var result = baseCreate(prototype);\n    if (props) _.extendOwn(result, props);\n    return result;\n  };\n\n  // Create a (shallow-cloned) duplicate of an object.\n  _.clone = function(obj) {\n    if (!_.isObject(obj)) return obj;\n    return _.isArray(obj) ? obj.slice() : _.extend({}, obj);\n  };\n\n  // Invokes interceptor with the obj, and then returns obj.\n  // The primary purpose of this method is to \"tap into\" a method chain, in\n  // order to perform operations on intermediate results within the chain.\n  _.tap = function(obj, interceptor) {\n    interceptor(obj);\n    return obj;\n  };\n\n  // Returns whether an object has a given set of `key:value` pairs.\n  _.isMatch = function(object, attrs) {\n    var keys = _.keys(attrs), length = keys.length;\n    if (object == null) return !length;\n    var obj = Object(object);\n    for (var i = 0; i < length; i++) {\n      var key = keys[i];\n      if (attrs[key] !== obj[key] || !(key in obj)) return false;\n    }\n    return true;\n  };\n\n\n  // Internal recursive comparison function for `isEqual`.\n  var eq = function(a, b, aStack, bStack) {\n    // Identical objects are equal. `0 === -0`, but they aren't identical.\n    // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).\n    if (a === b) return a !== 0 || 1 / a === 1 / b;\n    // A strict comparison is necessary because `null == undefined`.\n    if (a == null || b == null) return a === b;\n    // Unwrap any wrapped objects.\n    if (a instanceof _) a = a._wrapped;\n    if (b instanceof _) b = b._wrapped;\n    // Compare `[[Class]]` names.\n    var className = toString.call(a);\n    if (className !== toString.call(b)) return false;\n    switch (className) {\n      // Strings, numbers, regular expressions, dates, and booleans are compared by value.\n      case '[object RegExp]':\n      // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')\n      case '[object String]':\n        // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\n        // equivalent to `new String(\"5\")`.\n        return '' + a === '' + b;\n      case '[object Number]':\n        // `NaN`s are equivalent, but non-reflexive.\n        // Object(NaN) is equivalent to NaN\n        if (+a !== +a) return +b !== +b;\n        // An `egal` comparison is performed for other numeric values.\n        return +a === 0 ? 1 / +a === 1 / b : +a === +b;\n      case '[object Date]':\n      case '[object Boolean]':\n        // Coerce dates and booleans to numeric primitive values. Dates are compared by their\n        // millisecond representations. Note that invalid dates with millisecond representations\n        // of `NaN` are not equivalent.\n        return +a === +b;\n    }\n\n    var areArrays = className === '[object Array]';\n    if (!areArrays) {\n      if (typeof a != 'object' || typeof b != 'object') return false;\n\n      // Objects with different constructors are not equivalent, but `Object`s or `Array`s\n      // from different frames are.\n      var aCtor = a.constructor, bCtor = b.constructor;\n      if (aCtor !== bCtor && !(_.isFunction(aCtor) && aCtor instanceof aCtor &&\n                               _.isFunction(bCtor) && bCtor instanceof bCtor)\n                          && ('constructor' in a && 'constructor' in b)) {\n        return false;\n      }\n    }\n    // Assume equality for cyclic structures. The algorithm for detecting cyclic\n    // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\n\n    // Initializing stack of traversed objects.\n    // It's done here since we only need them for objects and arrays comparison.\n    aStack = aStack || [];\n    bStack = bStack || [];\n    var length = aStack.length;\n    while (length--) {\n      // Linear search. Performance is inversely proportional to the number of\n      // unique nested structures.\n      if (aStack[length] === a) return bStack[length] === b;\n    }\n\n    // Add the first object to the stack of traversed objects.\n    aStack.push(a);\n    bStack.push(b);\n\n    // Recursively compare objects and arrays.\n    if (areArrays) {\n      // Compare array lengths to determine if a deep comparison is necessary.\n      length = a.length;\n      if (length !== b.length) return false;\n      // Deep compare the contents, ignoring non-numeric properties.\n      while (length--) {\n        if (!eq(a[length], b[length], aStack, bStack)) return false;\n      }\n    } else {\n      // Deep compare objects.\n      var keys = _.keys(a), key;\n      length = keys.length;\n      // Ensure that both objects contain the same number of properties before comparing deep equality.\n      if (_.keys(b).length !== length) return false;\n      while (length--) {\n        // Deep compare each member\n        key = keys[length];\n        if (!(_.has(b, key) && eq(a[key], b[key], aStack, bStack))) return false;\n      }\n    }\n    // Remove the first object from the stack of traversed objects.\n    aStack.pop();\n    bStack.pop();\n    return true;\n  };\n\n  // Perform a deep comparison to check if two objects are equal.\n  _.isEqual = function(a, b) {\n    return eq(a, b);\n  };\n\n  // Is a given array, string, or object empty?\n  // An \"empty\" object has no enumerable own-properties.\n  _.isEmpty = function(obj) {\n    if (obj == null) return true;\n    if (isArrayLike(obj) && (_.isArray(obj) || _.isString(obj) || _.isArguments(obj))) return obj.length === 0;\n    return _.keys(obj).length === 0;\n  };\n\n  // Is a given value a DOM element?\n  _.isElement = function(obj) {\n    return !!(obj && obj.nodeType === 1);\n  };\n\n  // Is a given value an array?\n  // Delegates to ECMA5's native Array.isArray\n  _.isArray = nativeIsArray || function(obj) {\n    return toString.call(obj) === '[object Array]';\n  };\n\n  // Is a given variable an object?\n  _.isObject = function(obj) {\n    var type = typeof obj;\n    return type === 'function' || type === 'object' && !!obj;\n  };\n\n  // Add some isType methods: isArguments, isFunction, isString, isNumber, isDate, isRegExp, isError.\n  _.each(['Arguments', 'Function', 'String', 'Number', 'Date', 'RegExp', 'Error'], function(name) {\n    _['is' + name] = function(obj) {\n      return toString.call(obj) === '[object ' + name + ']';\n    };\n  });\n\n  // Define a fallback version of the method in browsers (ahem, IE < 9), where\n  // there isn't any inspectable \"Arguments\" type.\n  if (!_.isArguments(arguments)) {\n    _.isArguments = function(obj) {\n      return _.has(obj, 'callee');\n    };\n  }\n\n  // Optimize `isFunction` if appropriate. Work around some typeof bugs in old v8,\n  // IE 11 (#1621), and in Safari 8 (#1929).\n  if (typeof /./ != 'function' && typeof Int8Array != 'object') {\n    _.isFunction = function(obj) {\n      return typeof obj == 'function' || false;\n    };\n  }\n\n  // Is a given object a finite number?\n  _.isFinite = function(obj) {\n    return isFinite(obj) && !isNaN(parseFloat(obj));\n  };\n\n  // Is the given value `NaN`? (NaN is the only number which does not equal itself).\n  _.isNaN = function(obj) {\n    return _.isNumber(obj) && obj !== +obj;\n  };\n\n  // Is a given value a boolean?\n  _.isBoolean = function(obj) {\n    return obj === true || obj === false || toString.call(obj) === '[object Boolean]';\n  };\n\n  // Is a given value equal to null?\n  _.isNull = function(obj) {\n    return obj === null;\n  };\n\n  // Is a given variable undefined?\n  _.isUndefined = function(obj) {\n    return obj === void 0;\n  };\n\n  // Shortcut function for checking if an object has a given property directly\n  // on itself (in other words, not on a prototype).\n  _.has = function(obj, key) {\n    return obj != null && hasOwnProperty.call(obj, key);\n  };\n\n  // Utility Functions\n  // -----------------\n\n  // Run Underscore.js in *noConflict* mode, returning the `_` variable to its\n  // previous owner. Returns a reference to the Underscore object.\n  _.noConflict = function() {\n    root._ = previousUnderscore;\n    return this;\n  };\n\n  // Keep the identity function around for default iteratees.\n  _.identity = function(value) {\n    return value;\n  };\n\n  // Predicate-generating functions. Often useful outside of Underscore.\n  _.constant = function(value) {\n    return function() {\n      return value;\n    };\n  };\n\n  _.noop = function(){};\n\n  _.property = property;\n\n  // Generates a function for a given object that returns a given property.\n  _.propertyOf = function(obj) {\n    return obj == null ? function(){} : function(key) {\n      return obj[key];\n    };\n  };\n\n  // Returns a predicate for checking whether an object has a given set of\n  // `key:value` pairs.\n  _.matcher = _.matches = function(attrs) {\n    attrs = _.extendOwn({}, attrs);\n    return function(obj) {\n      return _.isMatch(obj, attrs);\n    };\n  };\n\n  // Run a function **n** times.\n  _.times = function(n, iteratee, context) {\n    var accum = Array(Math.max(0, n));\n    iteratee = optimizeCb(iteratee, context, 1);\n    for (var i = 0; i < n; i++) accum[i] = iteratee(i);\n    return accum;\n  };\n\n  // Return a random integer between min and max (inclusive).\n  _.random = function(min, max) {\n    if (max == null) {\n      max = min;\n      min = 0;\n    }\n    return min + Math.floor(Math.random() * (max - min + 1));\n  };\n\n  // A (possibly faster) way to get the current timestamp as an integer.\n  _.now = Date.now || function() {\n    return new Date().getTime();\n  };\n\n   // List of HTML entities for escaping.\n  var escapeMap = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#x27;',\n    '`': '&#x60;'\n  };\n  var unescapeMap = _.invert(escapeMap);\n\n  // Functions for escaping and unescaping strings to/from HTML interpolation.\n  var createEscaper = function(map) {\n    var escaper = function(match) {\n      return map[match];\n    };\n    // Regexes for identifying a key that needs to be escaped\n    var source = '(?:' + _.keys(map).join('|') + ')';\n    var testRegexp = RegExp(source);\n    var replaceRegexp = RegExp(source, 'g');\n    return function(string) {\n      string = string == null ? '' : '' + string;\n      return testRegexp.test(string) ? string.replace(replaceRegexp, escaper) : string;\n    };\n  };\n  _.escape = createEscaper(escapeMap);\n  _.unescape = createEscaper(unescapeMap);\n\n  // If the value of the named `property` is a function then invoke it with the\n  // `object` as context; otherwise, return it.\n  _.result = function(object, property, fallback) {\n    var value = object == null ? void 0 : object[property];\n    if (value === void 0) {\n      value = fallback;\n    }\n    return _.isFunction(value) ? value.call(object) : value;\n  };\n\n  // Generate a unique integer id (unique within the entire client session).\n  // Useful for temporary DOM ids.\n  var idCounter = 0;\n  _.uniqueId = function(prefix) {\n    var id = ++idCounter + '';\n    return prefix ? prefix + id : id;\n  };\n\n  // By default, Underscore uses ERB-style template delimiters, change the\n  // following template settings to use alternative delimiters.\n  _.templateSettings = {\n    evaluate    : /<%([\\s\\S]+?)%>/g,\n    interpolate : /<%=([\\s\\S]+?)%>/g,\n    escape      : /<%-([\\s\\S]+?)%>/g\n  };\n\n  // When customizing `templateSettings`, if you don't want to define an\n  // interpolation, evaluation or escaping regex, we need one that is\n  // guaranteed not to match.\n  var noMatch = /(.)^/;\n\n  // Certain characters need to be escaped so that they can be put into a\n  // string literal.\n  var escapes = {\n    \"'\":      \"'\",\n    '\\\\':     '\\\\',\n    '\\r':     'r',\n    '\\n':     'n',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  var escaper = /\\\\|'|\\r|\\n|\\u2028|\\u2029/g;\n\n  var escapeChar = function(match) {\n    return '\\\\' + escapes[match];\n  };\n\n  // JavaScript micro-templating, similar to John Resig's implementation.\n  // Underscore templating handles arbitrary delimiters, preserves whitespace,\n  // and correctly escapes quotes within interpolated code.\n  // NB: `oldSettings` only exists for backwards compatibility.\n  _.template = function(text, settings, oldSettings) {\n    if (!settings && oldSettings) settings = oldSettings;\n    settings = _.defaults({}, settings, _.templateSettings);\n\n    // Combine delimiters into one regular expression via alternation.\n    var matcher = RegExp([\n      (settings.escape || noMatch).source,\n      (settings.interpolate || noMatch).source,\n      (settings.evaluate || noMatch).source\n    ].join('|') + '|$', 'g');\n\n    // Compile the template source, escaping string literals appropriately.\n    var index = 0;\n    var source = \"__p+='\";\n    text.replace(matcher, function(match, escape, interpolate, evaluate, offset) {\n      source += text.slice(index, offset).replace(escaper, escapeChar);\n      index = offset + match.length;\n\n      if (escape) {\n        source += \"'+\\n((__t=(\" + escape + \"))==null?'':_.escape(__t))+\\n'\";\n      } else if (interpolate) {\n        source += \"'+\\n((__t=(\" + interpolate + \"))==null?'':__t)+\\n'\";\n      } else if (evaluate) {\n        source += \"';\\n\" + evaluate + \"\\n__p+='\";\n      }\n\n      // Adobe VMs need the match returned to produce the correct offest.\n      return match;\n    });\n    source += \"';\\n\";\n\n    // If a variable is not specified, place data values in local scope.\n    if (!settings.variable) source = 'with(obj||{}){\\n' + source + '}\\n';\n\n    source = \"var __t,__p='',__j=Array.prototype.join,\" +\n      \"print=function(){__p+=__j.call(arguments,'');};\\n\" +\n      source + 'return __p;\\n';\n\n    try {\n      var render = new Function(settings.variable || 'obj', '_', source);\n    } catch (e) {\n      e.source = source;\n      throw e;\n    }\n\n    var template = function(data) {\n      return render.call(this, data, _);\n    };\n\n    // Provide the compiled source as a convenience for precompilation.\n    var argument = settings.variable || 'obj';\n    template.source = 'function(' + argument + '){\\n' + source + '}';\n\n    return template;\n  };\n\n  // Add a \"chain\" function. Start chaining a wrapped Underscore object.\n  _.chain = function(obj) {\n    var instance = _(obj);\n    instance._chain = true;\n    return instance;\n  };\n\n  // OOP\n  // ---------------\n  // If Underscore is called as a function, it returns a wrapped object that\n  // can be used OO-style. This wrapper holds altered versions of all the\n  // underscore functions. Wrapped objects may be chained.\n\n  // Helper function to continue chaining intermediate results.\n  var result = function(instance, obj) {\n    return instance._chain ? _(obj).chain() : obj;\n  };\n\n  // Add your own custom functions to the Underscore object.\n  _.mixin = function(obj) {\n    _.each(_.functions(obj), function(name) {\n      var func = _[name] = obj[name];\n      _.prototype[name] = function() {\n        var args = [this._wrapped];\n        push.apply(args, arguments);\n        return result(this, func.apply(_, args));\n      };\n    });\n  };\n\n  // Add all of the Underscore functions to the wrapper object.\n  _.mixin(_);\n\n  // Add all mutator Array functions to the wrapper.\n  _.each(['pop', 'push', 'reverse', 'shift', 'sort', 'splice', 'unshift'], function(name) {\n    var method = ArrayProto[name];\n    _.prototype[name] = function() {\n      var obj = this._wrapped;\n      method.apply(obj, arguments);\n      if ((name === 'shift' || name === 'splice') && obj.length === 0) delete obj[0];\n      return result(this, obj);\n    };\n  });\n\n  // Add all accessor Array functions to the wrapper.\n  _.each(['concat', 'join', 'slice'], function(name) {\n    var method = ArrayProto[name];\n    _.prototype[name] = function() {\n      return result(this, method.apply(this._wrapped, arguments));\n    };\n  });\n\n  // Extracts the result from a wrapped and chained object.\n  _.prototype.value = function() {\n    return this._wrapped;\n  };\n\n  // Provide unwrapping proxy for some methods used in engine operations\n  // such as arithmetic and JSON stringification.\n  _.prototype.valueOf = _.prototype.toJSON = _.prototype.value;\n\n  _.prototype.toString = function() {\n    return '' + this._wrapped;\n  };\n\n  // AMD registration happens at the end for compatibility with AMD loaders\n  // that may not enforce next-turn semantics on modules. Even though general\n  // practice for AMD registration is to be anonymous, underscore registers\n  // as a named module because, like jQuery, it is a base library that is\n  // popular enough to be bundled in a third party lib, but not be part of\n  // an AMD load request. Those cases could generate an error when an\n  // anonymous define() is called outside of a loader request.\n  if (typeof define === 'function' && define.amd) {\n    define('underscore', [], function() {\n      return _;\n    });\n  }\n}.call(this));\n"]}